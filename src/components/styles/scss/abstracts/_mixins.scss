@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

******************
Desktop First
******************
1em = 16px
*/
// @mixin respond($breakpoint) {
//   @if $breakpoint == phone {
//     @media only screen and (max-width: 37.5em) {
//       @content;
//     } //600px
//   }
//   @if $breakpoint == tab-port {
//     @media only screen and (max-width: 56.25em) {
//       @content;
//     } //900px
//   }
//   @if $breakpoint == tab-land {
//     @media only screen and (max-width: 75em) {
//       @content;
//     } //1200px
//   }
//   @if $breakpoint == big-desktop {
//     @media only screen and (min-width: 112.5em) {
//       @content;
//     } //1800
//   }
// }



/*
******************
Mobile First
******************
1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (min-width: 20em) { // > 320px
      @content;
    } 
  }
  @if $breakpoint == tab-port {
    @media only screen and (min-width: 37.5em) { // > 600px
      @content;
    } 
  }
  @if $breakpoint == tab-land {
    @media only screen and (min-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == desktop {
    @media only screen and (min-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800
  }
}

@mixin colored-rectangle($width: 100px, $height: 100px, $bg-color: black) {
  width: $width;
  height: $height;
  background-color: $bg-color;
}

@mixin scale-font-size-by($font-size, $factor) {
  font-size: $factor * $factor;
}

@mixin font($font-family, $font-file) {
  @font-face {
    font-family: $font-family;
    src: url($font-file+".eot");
    src: url($font-file+".eot?#iefix") format("embedded-opentype"),
      url($font-file+".woff") format("woff"),
      url($font-file+".ttf") format("truetype"),
      url($font-file+".svg#aller") format("svg");
    font-weight: normal;
    font-style: normal;
  }
}

/* -------- Screens Break Points -------- */
@mixin for-phone-only {
  @media (max-width: 599px) {
    @content;
  }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 600px) {
    @content;
  }
}
@mixin for-tablet-portait-only {
  @media (min-width: 600px) and (max-width: 899px) {
    @content;
  }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 900px) {
    @content;
  }
}
@mixin for-tablet-landscape-only {
  @media (min-width: 900px) and (max-width: 1199px) {
    @content;
  }
}
@mixin for-desktop-up {
  @media (min-width: 1200px) {
    @content;
  }
}
@mixin for-desktop-only {
  @media (min-width: 1200px) and (max-width: 1799px) {
    @content;
  }
}
@mixin for-big-desktop-up {
  @media (min-width: 1800px) {
    @content;
  }
}

@mixin scale-font-size-by($font-size, $factor) {
  font-size: $factor * $factor;
}

@mixin my-key-frame($animation_name) {
  @keyframes #{$animation_name} {
    @content;
  }
}

@mixin grow-width($to, $from: 0%) {
  from {
    width: $from;
  }
  to {
    width: 0% + $to;
  }
}
